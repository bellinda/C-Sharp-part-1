1.Int odd or even
using System;
    class IntOddOrEven
    {
        static void Main()
        {
            Console.WriteLine("Enter value of a: ");
            int a = int.Parse(Console.ReadLine());
            int b = a % 2;
            if (b == 0)
            {
                Console.WriteLine("even");
            }
            else
                Console.WriteLine("odd");
        }
    }
	
	
2.Boolean expression
using System;
    class BooleanExpression
    {
        static void Main()
        {
            Console.Write("Enter an integer value of a: ");
            int a = int.Parse(Console.ReadLine());
            if ((a%7==0) && (a%5==0))
            {
                Console.WriteLine("The integer can be divided (without reminder) by 7 and 5 in the same time.");
            }
            else
            {
                Console.WriteLine("The integer has a reminder by devision by 5 or 7.");
            }
            
        }
    }
	
	
3.Rectangles' area
using System;
    class RectanglesArea
    {
        static void Main()
        {
            Console.Write("Enter a value for the rectangle's width: ");
            double width = double.Parse(Console.ReadLine());
            Console.Write("Enter a value for the rectangle's height: ");
            double height = double.Parse(Console.ReadLine());
            double area = (height * width)/2;
            Console.WriteLine("The rectangle's area is {0}.", area);
        }
 }
 
 
 4.Check the third digit
 using System;
    class CheckTheThirdDigit
    {
        static void Main()
        {
            Console.WriteLine("Enter a number: ");
            int num = int.Parse(Console.ReadLine())/100;
            Console.WriteLine(num % 10 == 7);
            
        }
    }
	
	
5.Find a bit
using System;
    class FindABit
    {
        static void Main()
        {
            Console.WriteLine("Enter a number: ");
            byte num = byte.Parse(Console.ReadLine());
            int p = 2;
            int mask = 1 << p;
            if ((num & mask) != 0)
            {
                Console.WriteLine(1);
            }
            else
            {
                Console.WriteLine(0);
            }

        }
    }
	
6.Point in circle
using System;
    class Program
    {
        static void Main()
        {
            Console.WriteLine("Enter the first coordinate of the point: ");
            int c1 = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter the second coordinate of the point: ");
            int c2 = int.Parse(Console.ReadLine());
            if ((c1>=0) && (c1<=5) && (c2>=0) && (c2<=5))
            {
                Console.WriteLine("The point is the the circle K(0,5).");
            }
            else
            {
                Console.WriteLine("The point isn't in the circle K(0,5).");
            }

        }
    }

	
7.Prime or not
using System;
    class PrimeOrNot
    {
        static void Main()
        {
            Console.WriteLine("Enter an integer number smaller than 100: ");
            int num = int.Parse(Console.ReadLine());
            int i;
            int p = 0;
            for (i = 2; i < num; i++)
            {
                if ((num % i == 0) && (i != num))
                {
                    p = p + 1;
                }
                else
                {
                    p = p + 0;
                }
                }
                if(p==0)
                {
                Console.WriteLine("The number {0} is prime. It can't be divided without reminder expected 1 or {0}." , num);
                }
                else
                {
                Console.WriteLine("The number {0} isn't prime. It can be divided of {1} numbers without reminder (expected 1 or {0}).", num, p);
                }
            }
        }
		
		
8.Trapezoids' area
using System;
    class TrapezoidsArea
    {
        static void Main()
        {
            Console.WriteLine("How long is the side a of the trapezoid?");
            double a = double.Parse(Console.ReadLine());
            Console.WriteLine("How long ist the side bof the trapezoid?");
            double b = double.Parse(Console.ReadLine());
            Console.WriteLine("How long ist the hight h of the trapezoid?");
            double h = double.Parse(Console.ReadLine());
            double area = ((a + b) * h) / 2;
            Console.WriteLine("The area of the trapezoid is = {0}.", area);
        }
    }

	
9.In a circle out of rectangle
using System;
    class InACircleOutOfRectangle
    {
        static void Main()
        {
            Console.WriteLine("Enter the first coordinate of the point - x: ");
            double x = double.Parse(Console.ReadLine());
            Console.WriteLine("Enter the second coordinate of the point - y: ");
            double y = double.Parse(Console.ReadLine());
            if (((x * x + y * y) >= 2) && ((x * x + y * y) <= 25) && ((x < -1) && (x > -5)) && ((y < 5) && (y > 1)) && ((y < -1) && (y > -5)))
            {
                Console.WriteLine("The point is in the circle K ((1,1),5) and out of the rectangle R(top = 1, left = -1, width = 6 and hight = 2.");
            }
            else
            {
                if (((x * x + y * y) >= 2) && ((x * x + y * y) <= 25) && (((x >= -1) || (x <= -5)) && ((y >= 5) || (y <= 1)) && ((y >= -1) || (y <= -5))))
            {
                Console.WriteLine("The point is in the circle K ((1,1),5) and in the rectangle R(top = 1, left = -1, width = 6 and hight = 2.");
            }
                else if(((x * x + y * y) <= 2) || ((x * x + y * y) >= 25) && ((x < -1) && (x > -5)) && ((y < 5) && (y > 1)) && ((y < -1) && (y > -5))) 
            {
                Console.WriteLine("The point is out of the circle K ((1,1),5) and out of the rectangle R(top = 1, left = -1, width = 6 and hight = 2.");
            }
            else
            {
                Console.WriteLine("The point is out of the circle K ((1,1),5) and in the rectangle R(top = 1, left = -1, width = 6 and hight = 2");
            }
            }
        }
    }
	
	
10.Bit of position P
using System;
class BitOfPositionP
{
    static void Main()
    {
        Console.WriteLine("Enter an integer: ");
        int v = int.Parse(Console.ReadLine());
        Console.WriteLine("Enter a number of position in the integer you want to check: ");
        int p = int.Parse(Console.ReadLine());
        int mask = 1 << p;
        Console.WriteLine((v & mask) != 0 ? true:false);

    }
}


11.Extract a value of a bit
using System;
    class ExtractAValueOfABit
    {
        static void Main()
        {
            Console.WriteLine("Give me an integer: ");
            int i = int.Parse(Console.ReadLine());
            Console.WriteLine("Tell me which bit do you want to know: ");
            int b = int.Parse(Console.ReadLine());
            int mask = 1 << b;
            Console.WriteLine((i & mask) != 0 ? 1:0);
        }
    }
	
	
12.Hold V at the position P
using System;
    class HoldVAtThePositionP
    {
        static void Main()
        {
            Console.WriteLine("Write me an integer: ");
            int n = int.Parse(Console.ReadLine());
            Console.WriteLine("Give me a position: ");
            int p = int.Parse(Console.ReadLine());
            Console.WriteLine("Give me a value (1 or 0) you want to save on the definite position: ");
            int v = int.Parse(Console.ReadLine());
            int mask = 1 << p;
            if (v == 1)
            {
                Console.WriteLine(mask | n);
            }
            else
            {
                Console.WriteLine(mask ^ n);
            }

        }
    }
	
	
13.Exchanging bits
using System;
    class ExchangingBits
    {
        static void Main()
        {
            Console.Write("Enter a number: ");
            uint number = uint.Parse(Console.ReadLine());
            uint mask = 1;
            uint bit1;
            uint bit2;
            uint number1;
            byte k = 3;
            byte p = 24;
            Console.WriteLine(Convert.ToString(number, 2).PadLeft(32, '0'));
            for (byte i = 1; i <= 3; i++, k++, p++)
            {
                mask = mask << k;
                bit1 = (mask & number) >> k;
                mask = mask >> k;
                mask = mask << p;
                bit2 = (mask & number) >> p;
                mask >>= p;
                if (bit1 != bit2)
                {
                    if (bit1 == 1)
                    {
                        number1 = number | (mask << p);
                        number = number1 ^ (mask << k);
                    }
                    else
                    {
                        number1 = number ^ (mask << p);
                        number = number1 | (mask << k);
                    }
                }
            }
            Console.WriteLine(Convert.ToString(number, 2).PadLeft(32, '0'));


        }
    }

	
	
14.Complicate exchanging
using System;
    class ComplicateExchanging
    {
        static void Main()
        {
            Console.Write("Please enter any number of type \"uint\" to exchange bits {p,p+1,...,p+k-1}\n(counting of bits starting from 0) with bits {q,q+1,...,q+k-1}\nrespectively: ");
            uint input = uint.Parse(Console.ReadLine());
            Console.Write("p= ");
            byte pos1 = byte.Parse(Console.ReadLine());
            Console.Write("q= ");
            byte pos2 = byte.Parse(Console.ReadLine());
            Console.Write("k= ");
            byte len = byte.Parse(Console.ReadLine());
            uint numberToAdd1 = ((input << (32 - pos2 - len)) >> (32 - len)) << pos1;
            uint numbertoAdd2 = ((input >> pos1) << (32 - len)) >> (32 - pos2 - len);
            uint numberToAdd = numberToAdd1 + numbertoAdd2;
            uint numberToSubtract1 = numberToAdd1 << (pos2 - pos1);
            uint numberToSubtract2 = numbertoAdd2 >> (pos2 - pos1);
            uint numberToSubtract = numberToSubtract1 + numberToSubtract2;
            uint output = (input - numberToSubtract) + numberToAdd;
            Console.WriteLine();
            Console.WriteLine("Result: " + output);
            Console.WriteLine();
        }
    }
